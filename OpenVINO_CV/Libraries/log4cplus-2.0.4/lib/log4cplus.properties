log4cplus.rootLogger=DEBUG, STDOUT

log4cplus.appender.STDOUT=log4cplus::ConsoleAppender
log4cplus.appender.STDOUT.layout=log4cplus::TTCCLayout

# 对ALL_MSGS使用异步Appender
log4cplus.appender.ALL_MSGS=log4cplus::AsyncAppender
# 异步Appender的队列大小
log4cplus.appender.ALL_MSGS.QueueLimit=10000
# 异步Appender中具体使用RollingFileAppender作为写文件的FileAppender
log4cplus.appender.ALL_MSGS.Appender=log4cplus::DailyRollingFileAppender
# 应用重新启动后是要清空日志文件再写入，还是要接在日志文件后面接着写入
log4cplus.appender.ALL_MSGS.Appender.Append=false
# 设置FileAppender的缓存大小
log4cplus.appender.ALL_MSGS.Appender.BufferSize=10000
# 达到缓存上限后是否立即写入
log4cplus.appender.ALL_MSGS.Appender.ImmediateFlush=true
# 写的文件路径和文件名
log4cplus.appender.ALL_MSGS.Appender.File=d:/Temp/test.log
# 设置每个日志文件的最大容量
log4cplus.appender.ALL_MSGS.Appender.MaxFileSize=250KB
# 日志文件达到最大容量后，重命名文件以备份，设置最大备份日志文件数
log4cplus.appender.ALL_MSGS.Appender.MaxBackupIndex=10
# 指定日志文件回滚周期
log4cplus.appender.ALL_MSGS.Appender.Schedule=MINUTELY
# 当日志文件达到回滚周期时，则重新生成新的日志文件，旧的日志文件会加上.%Y%m%d_%H%M后缀
log4cplus.appender.ALL_MSGS.Appender.DatePattern=%Y%m%d_%H%M
# 设置输出使用的locale
# log4cplus.appender.ALL_MSGS.Appender.Locale=en_US.UTF-8
# 自定义FileAppender的输出格式
log4cplus.appender.ALL_MSGS.Appender.layout=log4cplus::PatternLayout
# 自定义FileAppender的输出格式的样式
log4cplus.appender.ALL_MSGS.Appender.layout.ConversionPattern=%D{%Y-%m-%d %H:%M:%S.%q}%5p[%5t|%x][%l][%c]- %m%n


# category为main的日志
log4cplus.logger.main=DEBUG, ALL_MSGS
log4cplus.additivity.main=false
